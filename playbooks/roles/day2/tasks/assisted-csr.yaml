- name: Wait for bootstrap CSR request
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"
  shell: |
    oc get csr | awk '/node-bootstrapper.*Pending/ { print $1 }'
  register: csrName
  until: (csrName.stdout_lines|length) == (day2_worker_count|int * 2)
  retries: 60
  delay: 30

- name: Approve bootstrap CSR
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"
  shell: |
    oc adm certificate approve "{{ item }}"
  loop: "{{ csrName.stdout_lines | flatten }}"

- name: Wait for node CSR request
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"
  shell: |
     oc get csr | awk  '/.*Pending/ { print $1 }'
  register: nodeCsrName
  until:  (nodeCsrName.stdout_lines|length) == (day2_worker_count|int)
  delay: 30
  retries: 30

- name: Approve node CSR
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"
  shell: |
    oc adm certificate approve "{{ item }}"
  loop: "{{ nodeCsrName.stdout_lines | flatten}}"

# - name: Approve Worker CSRs
#   environment:
#     KUBECONFIG: "{{ workdir }}/auth/kubeconfig"
#   shell: |
#     oc get csr -ojson | jq -r '.items[] | select(.status == {} ) | .metadata.name' | xargs -r oc adm certificate approve
#   until: lookup('pipe','oc get nodes | grep -w day2 | grep -w Ready | wc -l') ==  day2_workers|length
#   retries: 30
#   delay: 60
#   when:  day2_workers|length > 0

- name: Ensure all hosts added to OS cluster
  environment:
    KUBECONFIG: "{{ kubeconfig_file }}"
  shell: |
    oc get node "{{ item.name }}" --no-headers
  register: cluster_nodes
  with_items: "{{ day2_workers }}"
  until:
  - '" Ready " in cluster_nodes.stdout'
  retries: 30
  delay: 30
