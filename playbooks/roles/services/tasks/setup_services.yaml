---
# tasks file for config services
  - name: Install needed packages
    package:
      name: "{{ packages }}"
      state: present

  - name: Remove existing config files
    import_tasks: remove_old_config_files.yaml
    #when: remove_old_config_files

  - name: Write out dnsmasq's addnhosts file
    template:
      src: ../templates/addnhosts.j2
      dest: /etc/dnsmasq.d/addnhosts

  - name: Write out dnsmasq config file
    template:
      src: ../templates/dnsmasq.conf.j2
      dest: /etc/dnsmasq.conf
    notify:
      - restart dnsmasq

  # - name: Write out dhcp file
  #   template:
  #     src: ../templates/dhcpd.conf.j2
  #     dest: /etc/dhcp/dhcpd.conf
  #   notify:
  #     - restart dhcpd
  #   when: enable_dhcp

  - name: Write out haproxy config file
    template:
      src: ../templates/haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
    notify:
      - restart haproxy
    #when: ( masters | length > 1 or bootstrap is defined ) and ( dhcp.api_vip is not defined or dhcp.ingress_vip is not defined )

  - name: setup service for day1 tasks
    when: day2_workers is not defined
    block:
    - name: Set HTTP server and prepare OCP4 bios
      block:
      - name: Copy httpd conf file
        template:
          src: ../templates/httpd.conf.j2
          dest: /etc/httpd/conf/httpd.conf
        notify:
          - restart httpd

      - name: Create apache directories for installing
        file:
            path: "{{ item }}"
            state: directory
            mode: 0755
        with_items:
            - /var/www/html/install
            - /var/www/html/ignition

    - name: Setup Squid proxy server
      import_tasks: squid.yaml
      when: setup_squid_proxy

    - name: Setup time synchronisation with Chrony
      become: true
      import_tasks: chrony.yaml
      when: chronyconfig.enabled

    - name: generate netboot entry for grub2
      shell: grub2-mknetdir --net-directory=/var/lib/tftpboot

    - name: make a link of directory powerpc-ieee1275
      file:
        src: /var/lib/tftpboot/boot/grub2/powerpc-ieee1275
        dest: /var/lib/tftpboot/boot/grub2/powerpc-ieee1275/powerpc-ieee1275
        state: link

    - name: Create TFTP RHCOS dir
      file:
        path: /var/lib/tftpboot/rhcos
        state: directory
        mode: 0755

    # fix the lpar_netboot failed to get PXE files under SELinux
    - name: Sel file label to tftpdir_rw_t
      shell: |
        semanage fcontext -a -t tftpdir_rw_t "/var/lib/tftpboot(/.*)?"
        semanage fcontext -a -t tftpdir_rw_t "/var/lib/tftpboot/boot(/.*)?"
        semanage fcontext -a -t tftpdir_rw_t "/var/lib/tftpboot/boot/grub2(/.*)?"
        semanage fcontext -a -t tftpdir_rw_t "/var/lib/tftpboot/boot/grub2/powerpc-ieee1275(/.*)?"
        restorecon -R -v /var/lib/tftpboot
        cp /var/lib/tftpboot/boot/grub2/powerpc-ieee1275/grub.cfg /var/lib/tftpboot/boot/grub2/powerpc-ieee1275/grub.cfg-0

    - name: setup NFS system
      when: storage_type =="nfs"
      block:
      - name: Create NFS export directory
        when: storage_type == "nfs"
        file:
          path: /export
          state: directory
          mode: 0777
          owner: "{{ owner }}"
          group: "{{ group }}"
        notify:
          - restart nfs

      - name: Copy NFS export conf file
        when: storage_type == "nfs"
        copy:
          src: ../files/nfs-exports
          dest: /etc/exports
        notify:
          - restart nfs

  - name: Generate grub2 config files
    block:
    - set_fact:
        install_url: "http://{{ helper.ipaddr }}:{{ http_port }}/install"
        ignition_url: "http://{{ helper.ipaddr }}:{{ http_port }}/ignition"

    - name: Set coreos_inst_url
      block:
        - assert:
            that: "{{ enable_remote_rootfs }}"
        - set_fact:
            coreos_inst_url: "coreos.live.rootfs_url={{ rhcos_rootfs }}"
      rescue:
        - set_fact:
            coreos_inst_url: "coreos.live.rootfs_url=http://{{ helper.ipaddr }}:{{ http_port }}/install/rootfs.img"

    # - name: Set day2_ignition
    #   block:
    #     - assert:
    #         that: "{{ install_type == 'assisted' }}"
    #     - set_fact:
    #         day2_ignition: "{{ install_type }}-day2.ign"
    #   rescue:
    #     - set_fact:
    #         day2_ignition: "worker.ign"

    - name: create grub.cfg
      copy:
        dest: /var/lib/tftpboot/boot/grub2/grub.cfg
        content: |
          default=0
          fallback=1
          timeout=1
    - name: generate grub entry (bootstrap)
      vars:
        role: bootstrap
        ignition: "bootstrap.ign"
        name: "{{ bootstrap.name }}"
        mac: "{{ bootstrap.macaddr }}"
        ipaddr: "{{ bootstrap.ipaddr }}"
        mdisk: "{{ bootstrap.disk | default( disk ) }}"
        multipath: ""
      include_tasks: generate_grub.yaml
      when: bootstrap is defined
    - name: generate grub entry (masters)
      vars:
        role: master
        ignition: "master-{{ install_type }}.ign"
        name: "{{ item.name }}"
        mac: "{{ item.macaddr }}"
        ipaddr: "{{ item.ipaddr }}"
        mdisk: "{{ item.disk | default( disk ) }}"
        multipath: "{{ item.multipath | default('') }}"
      include_tasks: generate_grub.yaml
      with_items: "{{ masters }}"
    - name: generate grub entry (workers)
      vars:
        role: worker
        ignition: "worker-{{ install_type }}.ign"
        name: "{{ item.name }}"
        mac: "{{ item.macaddr }}"
        ipaddr: "{{ item.ipaddr }}"
        mdisk: "{{ item.disk | default( disk ) }}"
        multipath: "{{ item.multipath | default('') }}"
      include_tasks: generate_grub.yaml
      with_items: "{{ workers }}"
      when:
        - workers is defined
        - workers | length > 0
    - name: generate grub entry (day2_workers)
      vars:
        role: worker
        ignition: "worker-{{ install_type }}-day2.ign"
        name: "{{ item.name }}"
        mac: "{{ item.macaddr }}"
        ipaddr: "{{ item.ipaddr }}"
        mdisk: "{{ item.disk | default( disk ) }}"
        multipath: "{{ item.multipath | default('') }}"
      include_tasks: generate_grub.yaml
      with_items: "{{ day2_workers }}"
      when:
        - day2_workers is defined
        - day2_workers | length > 0

  - name: Copying over nfs-provisioner rbac
    copy:
      src: ../files/nfs-provisioner-rbac.yaml
      dest: /usr/local/src/nfs-provisioner-rbac.yaml
      owner: root
      group: root
      mode: 0666

  - name: Copying over nfs-provisioner deployment
    template:
      src: ../templates/nfs-provisioner-deployment.yaml.j2
      dest: /usr/local/src/nfs-provisioner-deployment.yaml
      owner: root
      group: root
      mode: 0666

  - name: Copying over nfs-provisioner storageclass
    copy:
      src: ../files/nfs-provisioner-sc.yaml
      dest: /usr/local/src/nfs-provisioner-sc.yaml
      owner: root
      group: root
      mode: 0666

  - name: Copying over nfs-provisioner setup script
    copy:
      src: ../files/nfs-provisioner-setup.sh
      dest: /usr/local/bin/nfs-provisioner-setup.sh
      owner: root
      group: root
      mode: 0555

  - name: Copying over a sample PVC file for NFS
    copy:
      src: ../files/registry-pvc.yaml
      dest: /usr/local/src/registry-pvc.yaml
      mode: '0555'

  - name: Copy info script over
    template:
      src: ../templates/checker.sh.j2
      dest: /usr/local/bin/helpernodecheck
      owner: root
      group: root
      mode: 0555

  - name: Set the local resolv.conf file
    become: true
    template:
      src: ../templates/resolv.conf.j2
      dest: /etc/resolv.conf
