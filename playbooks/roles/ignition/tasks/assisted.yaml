  - name: Get access Token
    include_tasks: assisted-refresh-token.yaml

  - name: Generate cluster-create.json
    template:
      src: ../templates/assisted-create.json.j2
      dest: "{{ workdir }}/assisted-create.json"


  - name: Call to assisted service to create cluster
    uri:
      url: "{{ assisted_url }}/clusters"
      method: POST
      body_format: json
      src: "{{ workdir }}/assisted-create.json"
      headers:
          Authorization: "{{ api_token }}"
      status_code: 201
    register: cluster_result

  - name: Save create cluster output to file
    copy: 
      content:  "{{ cluster_result.json }}"
      dest: "{{ workdir }}/assisted-create-output.json"

  - set_fact:
      assisted_cluster_id: "{{ cluster_result.json.id }}" 

  - name: Generate assisted-register.json
    template:
      src: ../templates/assisted-register.json.j2
      dest: "{{ workdir }}/assisted-register.json"
 
  - name: Register the cluster infra-env to assisted service
    uri:
      url: "{{ assisted_url }}/infra-envs"
      method: POST
      body_format: json
      src: "{{ workdir }}/assisted-register.json"
      headers:
          Authorization: "{{ api_token }}"
      status_code: 201
    register: register_result

  - name: Save register cluster output to file
    copy: 
      content:  "{{ register_result.json }}"
      dest: "{{ workdir }}/assisted-register-output.json"

  - name: Patch discovery ignition
    when: ("api.integration" in assisted_url)
    block:
      - name: Copy registries.conf
        template: 
          src:  ../templates/registries.conf.j2
          dest: "{{ workdir }}/registries.conf"
      
      - name: Generate agent-config.yaml
        template:
          src: ../templates/discovery-ignition.json.j2
          dest: "{{ workdir }}/discovery-ignition.json"

      - name: Create the patch config
        shell: |
          base64 -w0 registries.conf > registries.conf.b64
          sed -i "s/BASE64_ENCODED_REGISTRY_CONF/$(cat registries.conf.b64)/" discovery-ignition.json
        args:
          chdir: "{{ workdir }}"

      - name: Patch the discovery ignition
        uri:
          url: "{{ assisted_url }}/infra-envs/{{ register_result.json.id }}"
          method: PATCH
          body_format: json
          src: "{{ workdir }}/discovery-ignition.json"
          headers:
              Authorization: "{{ api_token }}"
          status_code: 201

  - name: Get Infraenv info after patch
    uri:
      url: "{{ assisted_url }}/infra-envs/{{ register_result.json.id }}"
      method: GET
      body_format: json
      return_content: yes
      headers:
        Authorization: "{{ api_token }}"
      status_code: 200
    register: infraenv_result2

  - name: Save register cluster output to file
    copy: 
      content:  "{{ infraenv_result2.json }}"
      dest: "{{ workdir }}/assisted-patched-output.json"

  - name: Download the discovery ISO
    get_url:
      url: "{{ infraenv_result2.json.download_url }}"
      dest: "{{ workdir }}/{{install_type}}.iso"
      headers:
        Authorization: "{{ api_token }}"
      force: yes
