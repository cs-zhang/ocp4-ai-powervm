---
- name: Set the default API_URL
  set_fact:
    api_url: "http://{{ masters[0].ipaddr }}:8090/api/assisted-install/v2"

- name: Get cluster info
  uri:
    url: "{{ api_url }}/infra-envs"
    method: GET
    body_format: json
    return_content: yes
    status_code: 200
  register: infraenv_result
  until: infraenv_result.status == 200 and infraenv_result.json | length > 0
  retries: 60
  delay: 20


- name: Show cluster infraenv ID
  debug:
    msg: "{{ api_url }} : {{ infraenv_result.json }}"

- name: Get cluster_id and infraenv_id
  set_fact:
    cluster_id: "{{ infraenv_result.json[0].cluster_id }}"
    infraenv_id: "{{ infraenv_result.json[0].id }}"

- name: Call to all hosts info
  uri:
    url: "{{ api_url }}/infra-envs/{{ infraenv_id }}/hosts"
    method: GET
    body_format: json
    return_content: yes
    status_code: 200
  register: hosts_result
  until: (hosts_result.json | length) == (master_count | int + worker_count | int)
  retries: 60
  delay: 30

  #- name: SHow hosts
  #debug:
  #  msg: "{{ hosts_result.json }}"

- name: show host count
  debug:
    msg: "{{ hosts_result.json | length }}"

- name: Get cluster status
  uri:
    url: "{{ api_url }}/clusters/{{ cluster_id }}"
    method: GET
    body_format: json
    return_content: yes
    status_code: 200
  register: status_1
  until: status_1.status == 200 and status_1.json is defined
  retries: 60
  delay: 10

- name: Update host roles
  when: status_1.json.status == "discovering" or status_1.json.status == "pending-for-input" or status_1.json.status == "insufficient"
  block:
    - name: Get hosts info from infraenv
      uri:
        url: "{{ api_url }}/infra-envs/{{ infraenv_id }}/hosts"
        method: GET
        body_format: json
        return_content: yes
        status_code: 200
      register: hosts
      until: hosts.status == 200 and hosts.json | length > 0
      retries: 60
      delay: 10

    - name: set role for masters
      uri:
        url: "{{ api_url }}/infra-envs/{{ infraenv_id }}/hosts/{{ hosts.json | json_query(query) | first }}"
        method: PATCH
        body_format: json
        body: '{ "host_role": "master" }'
        status_code: 201
      vars:
        query: "[?requested_hostname==`{{ item.name }}`].id"
      with_items: "{{ masters }}"
      when: masters | length > 1
      
    - name: set role for workers
      uri:
        url: "{{ api_url }}/infra-envs/{{ infraenv_id }}/hosts/{{ hosts.json | json_query(query) | first }}"
        method: PATCH
        body_format: json
        body: '{ "host_role": "worker" }'
        status_code: 201
      vars:
        query: "[?requested_hostname==`{{ item.name }}`].id"
      with_items: "{{ workers }}"
      when: 
        - workers is defined 
        - workers | length > 0


- name: Wait for OpenShift cluster installation start.
  include_tasks:  agent-wait-start.yaml
  loop: "{{ range(1,5,1) | list}}"

- name: Waiting for bootstrap completed
  shell: "{{ openshift_installer }} agent wait-for bootstrap-complete --log-level {{ log_level }}"
  args:
    chdir: "{{ workdir }}"

- name: Waiting for installation completed
  shell: "{{ openshift_installer }} agent wait-for install-complete --log-level {{ log_level }}"
  args:
    chdir: "{{ workdir }}"


