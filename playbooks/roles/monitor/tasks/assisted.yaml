---
- name: Get access Token
  include_tasks: ../../ignition/tasks/assisted-refresh-token.yaml

- name: Get cluster info from output json file
  set_fact:
    cluster_info: '{{ lookup("file", "{{ workdir }}/assisted-create-output.json") | from_json }}'

- name: Show cluster ID
  debug:
    msg: "{{ cluster_info.id }}"

- name: Get cluster infraenv info from output json file
  set_fact:
    infraenv_info: '{{ lookup("file", "{{ workdir }}/assisted-register-output.json") | from_json }}'

- name: Show cluster infraenv ID
  debug:
    msg: "{{ infraenv_info.id }}"

- name: Show node count
  debug:
    msg: "master:{{ master_count }}, worker:{{ worker_count }}, total: {{ master_count | int + worker_count | int }}"

- name: Call to all hosts info
  uri:
    url: "{{ assisted_url }}/infra-envs/{{ infraenv_info.id }}/hosts"
    method: GET
    body_format: json
    return_content: yes
    headers:
      Authorization: "{{ api_token }}"
    status_code: 200
  register: hosts_result
  until: (hosts_result.json | length) == (master_count | int + worker_count | int)
  retries: 30
  delay: 30

  #- name: SHow hosts
  #debug:
  #  msg: "{{ hosts_result.json }}"

- name: show host count
  debug:
    msg: "{{ hosts_result.json | length }}"

- name: wait hosts have been added to Assistance Installer
  uri:
    url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}"
    method: GET
    body_format: json
    return_content: yes
    headers:
      Authorization: "{{ api_token }}"
    status_code: 200
  register: ocpcluster
  until: ocpcluster.json.host_networks is defined
  delay: 20
  retries: 50

- name: Get cluster status
  uri:
    url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}"
    method: GET
    body_format: json
    return_content: yes
    headers:
      Authorization: "{{ api_token }}"
    status_code: 200
  register: ocpcluster
  until: ocpcluster.json.host_networks|length > 0 and ocpcluster.json.status != "insufficient"
  delay: 20
  retries: 50

- name: Print out ocpcluster.json.status
  debug:
    msg: "{{ ocpcluster.json.status }}"

- name: Patch cluster
  when: (ocpcluster.json.status == "pending-for-input" or ocpcluster.json.status == "ready") and masters | length > 1
  block:
  - name: Generate cluster-update.json
    template:
      src: ../templates/cluster-update.json.j2
      dest: "{{ workdir }}/cluster-update.json"

  - name: Update the cluster info to assisted service
    uri:
      url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}"
      method: PATCH
      body_format: json
      src: "{{ workdir }}/cluster-update.json"
      headers:
          Authorization: "{{ api_token }}"
      status_code: 201

  - name: Update host roles
    block:
    - name: Get hosts info from infraenv
      uri:
        url: "{{ assisted_url }}/infra-envs/{{ infraenv_info.id }}/hosts"
        method: GET
        body_format: json
        return_content: yes
        headers:
          Authorization: "{{ api_token }}"
        status_code: 200
      register: hosts
    
    - name: set role for masters
      uri:
        url: "{{ assisted_url }}/infra-envs/{{ infraenv_info.id }}/hosts/{{ hosts.json | json_query(query) | first }}"
        method: PATCH
        body_format: json
        body: '{ "host_role": "master" }'
        headers:
          Authorization: "{{ api_token }}"
        status_code: 201
      vars:
        query: "[?requested_hostname==`{{ item.name }}`].id"
      with_items: "{{ masters }}"

    - name: set role for workers
      uri:
        url: "{{ assisted_url }}/infra-envs/{{ infraenv_info.id }}/hosts/{{ hosts.json | json_query(query) | first }}"
        method: PATCH
        headers:
          Authorization: "{{ api_token }}"
        body_format: json
        body: '{ "host_role": "worker" }'
        status_code: 201
      vars:
        query: "[?requested_hostname==`{{ item.name }}`].id"
      with_items: "{{ workers }}"
      when: 
        - workers is defined 
        - workers | length > 0

- name: Get cluster status
  uri:
      url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}"
      method: GET
      headers:
          Authorization: "{{ api_token }}"
      body_format: json
      return_content: yes
      status_code: 200
  register: status_2
  until: status_2.json.status == "ready" or status_2.json.status == "installing" or status_2.json.status == "installed"
  retries: 30
  delay: 30

- name: Start installation
  when: ocpcluster.json.status == "ready" or status_2.json.status == "ready"
  uri:
    url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}/actions/install"
    method: POST
    headers:
          Authorization: "{{ api_token }}"
    return_content: yes
    status_code: 202
  register: install_status
  until: install_status.status == 202
  delay: 20
  retries: 15

- name: Waiting for installation start
  uri:
    url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}"
    method: GET
    headers:
          Authorization: "{{ api_token }}"
    body_format: json
    return_content: yes
    status_code: 200
  register: cluster_status
  until: cluster_status.json.status == "installing"
  retries: 30
  delay: 15

- name: Download kubeconfig
  get_url:
    url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}/downloads/credentials?file_name=kubeconfig"
    dest: "{{ workdir }}/kubeconfig"
    headers:
      Authorization: "{{ api_token }}"

- name: Download kubeadmin password
  get_url:
    url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}/downloads/credentials?file_name=kubeadmin-password"
    dest: "{{ workdir }}/kubeadmin-password"
    headers:
      Authorization: "{{ api_token }}"

- name: Download OpenShift bare metal cluster install-config.yaml.
  get_url:
    url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}/downloads/files?file_name=install-config.yaml"
    dest: "{{ workdir }}/install-config.yaml"
    headers:
      Authorization: "{{ api_token }}"
    
- name: Refresh access Token
  include_tasks: ../../ignition/tasks/assisted-refresh-token.yaml

- name: Check if Cluster is installed
  block:
    - name: Is Cluster Installed
      uri:
        url: "{{ assisted_url }}/clusters/{{ cluster_info.id }}"
        method: GET
        headers:
          accept: application/json
          Authorization: "{{ api_token }}"
        return_content: yes
        status_code: 200
        validate_certs: "{{ assisted_token != '' }}"
      register: ocpcluster
      until: >
        ocpcluster.json.status == 'installed' or
        ocpcluster.json.status == 'error' or
        ocpcluster.json.status == 'insufficient' or
        ocpcluster.json.status == 'installing-pending-user-action'
      delay: 60
      retries: 100
      failed_when: >
        ocpcluster.json.status == 'error' or
        ocpcluster.json.status == 'insufficient' or
        ocpcluster.json.status == 'installing-pending-user-action'

  rescue:
    - name: Refresh access Token
      include_tasks: ../../ignition/tasks/assisted-refresh-token.yaml
      when: ocpcluster.status|default('None') != 200 and assisted_token != ""

    - name: Fail if cluster wasn't installed successfully
      fail:
        msg: "Cluster failed to install. Cluster ended up with status: {{ ocpcluster.json.status }}"
      when:
        - ocpcluster.status|default('None') == 200
        - ocpcluster.json.status|default('None') != 'installed'


